@model List<Tickets.Models.ReceiptPayment>

@{
    Layout = "~/Views/Shared/_ReportLayout.cshtml";
    ViewBag.Title = "REPORTE DE INGRESOS DE CAJA DE FECHA " + Model.FirstOrDefault().CreateDate.ToString("dd-MM-yyyy");

    var context = new Tickets.Models.TicketsEntities();
    var config = context.SystemConfigs.FirstOrDefault();
    var CatalogPaymentsList = context.Catalogs.Where(f => f.IdGroup == (int)Tickets.Models.Enums.CatalogGroupEnum.PaymentType);
    string adminName = config != null ? config.CajaGeneral : "";
    string adminCargo = config != null ? config.CajaGeneralCargo : "";
    decimal Total = 0.0m;
    decimal TotalGeneralIngresado = 0.0m;
    decimal TotalGeneralEnCaja = 0.0m;
    decimal TotalGeneralFueraCaja = 0.0m;

    var countUsers = Model.GroupBy(g => g.CreateUser).Select(s => s.Key).ToList();

    System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("es-ES");
}

<style>
    .col-lg-12 {
        width: 100%;
        float: left;
    }

    .col-lg-4 {
        width: 33.333%;
        float: left;
    }

    .col-lg-6 {
        width: 50%;
        float: left;
    }

    .text-center {
        text-align: center;
    }

    .text-right {
        text-align: right;
    }

    .text-left {
        text-align: left;
    }

    .no-padder {
        padding-left: 0px;
        padding-right: 0px;
    }
</style>

<div class="col-lg-12">
    <div class="col-lg-12 no-padder text-center">
        <div class="col-lg-12 no-padder text-center" style="margin-top: 50px;">
            <img style="height:65px; width:auto; margin-bottom:5px;" src="~/Images/logo.png" />
        </div>
        <div class="col-lg-12 no-padder text-center">
            <b>MINISTERIO DE HACIENDA</b>
        </div>
        <div class="col-lg-12 no-padder text-center">
            <b>ADMINISTRACION DE LA LOTERIA NACIONAL</b>
        </div>
        <div class="col-lg-12 no-padder text-center">
            <b>REPORTE DE CAJA DEL @Model.FirstOrDefault().CreateDate.ToString("dd/MM/yyyy")</b>
        </div>
        <div class="col-lg-12 col-md-12 col-sm-12 no-padder text-right">
            <b>FECHA: </b> @DateTime.Now.ToString("dd/MM/yyyy") <br />
            <b>HORA: </b> @DateTime.Now.ToString("hh:mm:ss tt")
        </div>
    </div>
    <div>
        @if (countUsers.Count() > 1)
        {
            TotalGeneralFueraCaja = Model.Where(w => w.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.DescuentoNomina || w.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.DescuentoPrestaciones)
                                         .Sum(s => s.TotalCash + s.TotalCredit + s.TotalCheck);

            TotalGeneralEnCaja = Model.Where(w => w.ReceiptType != (int)Tickets.Models.Enums.PaymentTypeEnum.DescuentoNomina && w.ReceiptType != (int)Tickets.Models.Enums.PaymentTypeEnum.DescuentoPrestaciones)
                                      .Sum(s => s.TotalCash + s.TotalCredit + s.TotalCheck);

            foreach (var user in countUsers)
            {
                bool trans = false;
                Total = 0;
                <div class="col-lg-12 no-padder">
                    <table class="table">
                        <thead>
                            <tr>
                                @{
                                    var Cajero = context.Users.Where(W => W.Id == user).Select(S => new { S.Employee.Name, S.Employee.LastName });
                                }
                                @if (Model.Any(a => a.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.TransDepDirect))
                                {
                                    trans = true;
                                    <th colspan="8" class="text-center">
                                        @(Cajero.FirstOrDefault().Name + " " + Cajero.FirstOrDefault().LastName)
                                    </th>
                                }
                                else
                                {
                                    <th colspan="7" class="text-center">
                                        @(Cajero.FirstOrDefault().Name + " " + Cajero.FirstOrDefault().LastName)
                                    </th>
                                }
                            </tr>
                            <tr>
                                <th class="text-center">FACTURA</th>
                                <th class="text-center">RECIBO</th>
                                <th>CLIENTE</th>
                                <th>FECHA</th>
                                <th class="text-center">SORTEO</th>
                                <th>FORMA DE PAGO</th>
                                @if (Model.Any(a => a.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.TransDepDirect))
                                {
                                    <th>REFERENCIA</th>
                                }
                                <th class="text-right">VALOR</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var receiptPayment in Model.Where(w => w.CreateUser == user))
                            {
                                if ((receiptPayment.TotalCash + receiptPayment.TotalCredit + receiptPayment.TotalCheck) > 0)
                                {
                                    <tr>
                                        <td class="text-center">
                                            @receiptPayment.Invoice.SequenceNumber
                                        </td>
                                        <td class="text-center">
                                            @(receiptPayment.Nomenclature == null ? receiptPayment.SequenceNumber.Value.ToString() : string.Concat(receiptPayment.Nomenclature, receiptPayment.SequenceNumber.Value.ToString().PadLeft((receiptPayment.Digits != null?(int)receiptPayment.Digits : 0), '0')))
                                        </td>
                                        <td>
                                            @if (receiptPayment.Client.GroupId == (int)Tickets.Models.Enums.ClientGroupEnum.CajaDespachoExpress)
                                            {
                                                @(receiptPayment.Client.Id + " - " + receiptPayment.Client.Name)<br />@(receiptPayment.Nombre)
                                            }
                                            else
                                            {
                                                @(receiptPayment.Client.Id + " - " + receiptPayment.Client.Name)
                                            }
                                        </td>
                                        <td>@receiptPayment.ReceiptDate.ToString()</td>
                                        <td class="text-center">
                                            @receiptPayment.Invoice.Raffle.Symbol @receiptPayment.Invoice.Raffle.Separator @receiptPayment.Invoice.Raffle.SequenceNumber @receiptPayment.Invoice.Raffle.Name
                                        </td>
                                        <td>
                                            @CatalogPaymentsList.FirstOrDefault(f => f.Id == receiptPayment.ReceiptType).NameDetail
                                        </td>
                                        @if (Model.Any(a => a.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.TransDepDirect))
                                        {
                                            <td>
                                                @receiptPayment.Recibo
                                            </td>
                                        }
                                        <td class="text-right">
                                            @if (receiptPayment.TotalCash > 0)
                                            {
                                                Total += receiptPayment.TotalCash;
                                                @(receiptPayment.TotalCash.ToString("c", new System.Globalization.CultureInfo("es-DO")))
                                            }
                                            else if (receiptPayment.TotalCredit > 0)
                                            {
                                                Total += receiptPayment.TotalCredit;
                                                @(receiptPayment.TotalCredit.ToString("c", new System.Globalization.CultureInfo("es-DO")))
                                            }
                                            else if (receiptPayment.TotalCheck > 0)
                                            {
                                                Total += receiptPayment.TotalCheck;
                                                @(receiptPayment.TotalCheck.ToString("c", new System.Globalization.CultureInfo("es-DO")))
                                            }
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    var noteList = receiptPayment.NoteCreditReceiptPayments.Select(s => new
                                    {
                                        s.ReceiptPaymentId,
                                        ReceiptSequenceNumber = s.ReceiptPayment.SequenceNumber,
                                        InvoiceSequenceNumber = s.ReceiptPayment.Invoice.SequenceNumber,
                                        s.ReceiptPayment.Nomenclature,
                                        NoteCreditSequenceNumber = s.NoteCredit.SequenceNumber,
                                        s.ReceiptPayment.Client.GroupId,
                                        ClientId = s.ReceiptPayment.Client.Id,
                                        ClientName = s.ReceiptPayment.Client.Name,
                                        s.ReceiptPayment.Nombre,
                                        s.ReceiptPayment.ReceiptDate,
                                        s.ReceiptPayment.Invoice.Raffle.Symbol,
                                        s.ReceiptPayment.Invoice.Raffle.Separator,
                                        RaffleSequenceNumber = s.ReceiptPayment.Invoice.Raffle.SequenceNumber,
                                        RaffleName = s.ReceiptPayment.Invoice.Raffle.Name,
                                        s.ReceiptPayment.ReceiptType,
                                        s.ReceiptPayment.Recibo,
                                        s.TotalCash
                                    }).Where(w => w.ReceiptPaymentId == receiptPayment.Id).ToList();

                                    foreach (var note in noteList)
                                    {
                                        <tr>
                                            <td class="text-center">
                                                @note.InvoiceSequenceNumber
                                            </td>
                                            <td class="text-center">
                                                @(note.Nomenclature == null ? note.ReceiptSequenceNumber.Value.ToString() : string.Concat(note.Nomenclature, note.ReceiptSequenceNumber.Value.ToString().PadLeft(5, '0')))
                                            </td>
                                            <td>
                                                @if (note.GroupId == (int)Tickets.Models.Enums.ClientGroupEnum.CajaDespachoExpress)
                                                {
                                                    @(note.ClientId + " - " + note.ClientName)<br />@(note.Nombre)
                                                }
                                                else
                                                {
                                                    @(note.ClientId + " - " + note.ClientName)
                                                }
                                            </td>
                                            <td>@note.ReceiptDate.ToString()</td>
                                            <td class="text-center">
                                                @note.Symbol @note.Separator @note.RaffleSequenceNumber @note.RaffleName
                                            </td>
                                            <td>
                                                @(CatalogPaymentsList.FirstOrDefault(f => f.Id == note.ReceiptType).NameDetail + " No. " + note.NoteCreditSequenceNumber)
                                            </td>
                                            @if (Model.Any(a => a.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.TransDepDirect))
                                            {
                                                <td>
                                                    @note.Recibo
                                                </td>
                                            }
                                            <td class="text-right">
                                                @(note.TotalCash.ToString("c", new System.Globalization.CultureInfo("es-DO")))
                                            </td>
                                        </tr>
                                        Total += note.TotalCash;
                                        TotalGeneralFueraCaja += note.TotalCash;
                                    }
                                }
                            }
                            @if (trans == true)
                            {
                                <tr class="total">
                                    <td colspan="8" class="text-right">TOTAL: <strong>@(Total.ToString("c", new System.Globalization.CultureInfo("es-DO")))</strong></td>
                                </tr>
                            }
                            else
                            {
                                <tr class="total">
                                    <td colspan="7" class="text-right">TOTAL: <strong>@(Total.ToString("c", new System.Globalization.CultureInfo("es-DO")))</strong></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                TotalGeneralIngresado += Total;
            }
            <div class="col-lg-12 no-padder">
                <table class="table">
                    <tr>
                        <th class="text-right">TOTAL GENERAL INGRESADO POR CAJA: @(TotalGeneralEnCaja.ToString("c", new System.Globalization.CultureInfo("es-DO")))</th>
                    </tr>
                    <tr>
                        <th class="text-right">TOTAL GENERAL INGRESADO FUERA DE CAJA: @(TotalGeneralFueraCaja.ToString("c", new System.Globalization.CultureInfo("es-DO")))</th>
                    </tr>
                    <tr>
                        <th class="text-right">TOTAL GENERAL DE INGRESADO: @((TotalGeneralIngresado).ToString("c", new System.Globalization.CultureInfo("es-DO")))</th>
                    </tr>
                </table>
            </div>
        }
        else
        {
            int UserId = Model.FirstOrDefault().CreateUser;
            var UserData = context.Users.Where(f => f.Id == UserId).Select(s => new { s.Employee.Gender, s.Employee.Name, s.Employee.LastName });
            <div class="col-lg-12 no-padder">
                @if (UserData.FirstOrDefault().Gender == (int)Tickets.Models.Enums.GenderEnum.Femenino)
                {
                    <strong>CAJERA: @(UserData.FirstOrDefault().Name + " " + UserData.FirstOrDefault().LastName)</strong>
                }
                else if (UserData.FirstOrDefault().Gender == (int)Tickets.Models.Enums.GenderEnum.Masculino)
                {
                    <strong>CAJERA: @(UserData.FirstOrDefault().Name + " " + UserData.FirstOrDefault().LastName)</strong>
                }
            </div>
            <div class="col-lg-12 no-padder">
                <table class="table">
                    <thead>
                        <tr>
                            <th class="text-center">FACTURA</th>
                            <th class="text-center">RECIBO</th>
                            <th>CLIENTE</th>
                            <th>FECHA</th>
                            <th class="text-center">SORTEO</th>
                            <th>FORMA DE PAGO</th>
                            @if (Model.Any(a => a.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.TransDepDirect))
                            {
                                <th>REFERENCIA</th>
                            }
                            <th class="text-right">VALOR</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            TotalGeneralFueraCaja = Model.Where(w => w.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.DescuentoNomina ||
                                                                     w.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.DescuentoPrestaciones).Sum(s => s.TotalCash + s.TotalCredit + s.TotalCheck);

                            TotalGeneralEnCaja = Model.Where(w => w.ReceiptType != (int)Tickets.Models.Enums.PaymentTypeEnum.DescuentoNomina &&
                                                                  w.ReceiptType != (int)Tickets.Models.Enums.PaymentTypeEnum.DescuentoPrestaciones).Sum(s => s.TotalCash + s.TotalCredit + s.TotalCheck);
                        }
                        @foreach (var receiptPayment in Model)
                        {
                            if ((receiptPayment.TotalCash + receiptPayment.TotalCredit + receiptPayment.TotalCheck) > 0)
                            {
                                <tr>
                                    <td class="text-center">
                                        @receiptPayment.Invoice.SequenceNumber
                                    </td>
                                    <td class="text-center">
                                        @(receiptPayment.Nomenclature == null ? receiptPayment.SequenceNumber.Value.ToString() : string.Concat(receiptPayment.Nomenclature, receiptPayment.SequenceNumber.Value.ToString().PadLeft((receiptPayment.Digits != null ? (int)receiptPayment.Digits : 0), '0')))
                                    </td>
                                    <td>
                                        @if (receiptPayment.Client.GroupId == (int)Tickets.Models.Enums.ClientGroupEnum.CajaDespachoExpress)
                                        {
                                            @(receiptPayment.Client.Id + " - " + receiptPayment.Client.Name)<br />@(receiptPayment.Nombre)
                                        }
                                        else
                                        {
                                            @(receiptPayment.Client.Id + " - " + receiptPayment.Client.Name)
                                        }
                                    </td>
                                    <td>@receiptPayment.ReceiptDate.ToString()</td>
                                    <td class="text-center">
                                        @receiptPayment.Invoice.Raffle.Symbol @receiptPayment.Invoice.Raffle.Separator @receiptPayment.Invoice.Raffle.SequenceNumber @receiptPayment.Invoice.Raffle.Name
                                    </td>
                                    <td>
                                        @CatalogPaymentsList.FirstOrDefault(f => f.Id == receiptPayment.ReceiptType).NameDetail
                                    </td>
                                    @if (Model.Any(a => a.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.TransDepDirect))
                                    {
                                        <td>
                                            @receiptPayment.Recibo
                                        </td>
                                    }
                                    <td class="text-right">
                                        @if (receiptPayment.TotalCash > 0)
                                        {
                                            Total += receiptPayment.TotalCash;
                                            @(receiptPayment.TotalCash.ToString("c", new System.Globalization.CultureInfo("es-DO")))
                                        }
                                        else if (receiptPayment.TotalCredit > 0)
                                        {
                                            Total += receiptPayment.TotalCredit;
                                            @(receiptPayment.TotalCredit.ToString("c", new System.Globalization.CultureInfo("es-DO")))
                                        }
                                        else if (receiptPayment.TotalCheck > 0)
                                        {
                                            Total += receiptPayment.TotalCheck;
                                            @(receiptPayment.TotalCheck.ToString("c", new System.Globalization.CultureInfo("es-DO")))
                                        }
                                    </td>
                                </tr>
                            }
                            else
                            {
                                var noteList = receiptPayment.NoteCreditReceiptPayments.Select(s => new
                                {
                                    s.ReceiptPaymentId,
                                    ReceiptSequenceNumber = s.ReceiptPayment.SequenceNumber,
                                    InvoiceSequenceNumber = s.ReceiptPayment.Invoice.SequenceNumber,
                                    s.ReceiptPayment.Nomenclature,
                                    NoteCreditSequenceNumber = s.NoteCredit.SequenceNumber,
                                    s.ReceiptPayment.Client.GroupId,
                                    ClientId = s.ReceiptPayment.Client.Id,
                                    ClientName = s.ReceiptPayment.Client.Name,
                                    s.ReceiptPayment.Nombre,
                                    s.ReceiptPayment.ReceiptDate,
                                    s.ReceiptPayment.Invoice.Raffle.Symbol,
                                    s.ReceiptPayment.Invoice.Raffle.Separator,
                                    RaffleSequenceNumber = s.ReceiptPayment.Invoice.Raffle.SequenceNumber,
                                    RaffleName = s.ReceiptPayment.Invoice.Raffle.Name,
                                    s.ReceiptPayment.ReceiptType,
                                    s.ReceiptPayment.Recibo,
                                    s.TotalCash
                                }).Where(w => w.ReceiptPaymentId == receiptPayment.Id).ToList();

                                foreach (var note in noteList)
                                {
                                    <tr>
                                        <td class="text-center">
                                            @note.InvoiceSequenceNumber
                                        </td>
                                        <td class="text-center">
                                            @(note.Nomenclature == null ? note.ReceiptSequenceNumber.Value.ToString() : string.Concat(note.Nomenclature, note.ReceiptSequenceNumber.Value.ToString().PadLeft(5, '0')))
                                        </td>
                                        <td>
                                            @if (note.GroupId == (int)Tickets.Models.Enums.ClientGroupEnum.CajaDespachoExpress)
                                            {
                                                @(note.ClientId + " - " + note.ClientName)<br />@(note.Nombre)
                                            }
                                            else
                                            {
                                                @(note.ClientId + " - " + note.ClientName)
                                            }
                                        </td>
                                        <td>@note.ReceiptDate.ToString()</td>
                                        <td class="text-center">
                                            @note.Symbol @note.Separator @note.RaffleSequenceNumber @note.RaffleName
                                        </td>
                                        <td>
                                            @(CatalogPaymentsList.FirstOrDefault(f => f.Id == note.ReceiptType).NameDetail + " No. " + note.NoteCreditSequenceNumber)
                                        </td>
                                        @if (Model.Any(a => a.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.TransDepDirect))
                                        {
                                            <td>
                                                @note.Recibo
                                            </td>
                                        }
                                        <td class="text-right">
                                            @(note.TotalCash.ToString("c", new System.Globalization.CultureInfo("es-DO")))
                                        </td>
                                    </tr>
                                    Total += note.TotalCash;
                                    TotalGeneralFueraCaja += note.TotalCash;
                                }
                            }
                        }
                        <tr class="total">
                            <td colspan="8" class="text-right">TOTAL: <strong>@(Total.ToString("c", new System.Globalization.CultureInfo("es-DO")))</strong></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-lg-12 no-padder">
                <table class="table">
                    <tr>
                        <th class="text-right">TOTAL GENERAL INGRESADO POR CAJA: @((TotalGeneralEnCaja).ToString("c", new System.Globalization.CultureInfo("es-DO")))</th>
                    </tr>
                    <tr>
                        <th class="text-right">TOTAL GENERAL INGRESADO FUERA DE CAJA: @(TotalGeneralFueraCaja.ToString("c", new System.Globalization.CultureInfo("es-DO")))</th>
                    </tr>
                    <tr>
                        <th class="text-right">TOTAL GENERAL DE INGRESADO: @((Total).ToString("c", new System.Globalization.CultureInfo("es-DO")))</th>
                    </tr>
                </table>
            </div>
        }
    </div>
    <div class="col-lg-12 no-padder text-center">
        <b>@adminName</b>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-6 text-center">
        <div class="col-lg-12 no-padder text-center">

        </div>
    </div>
    <div class="col-lg-12 no-padder text-center">
        <span>@adminCargo</span>
    </div>
</div>
