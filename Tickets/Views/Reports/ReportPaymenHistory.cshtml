@model List<Tickets.Models.Invoice>

@{
    Layout = "~/Views/Shared/_ReportLayout.cshtml";
    ViewBag.Title = "HISTORICO DE PAGO";

    var context = new Tickets.Models.TicketsEntities();
    var config = context.SystemConfigs.FirstOrDefault();
    string adminName = config != null ? config.LoteryAdmin : "";
    string adminCargo = config != null ? config.Cargo : "";

    var Efectivo = Tickets.Models.Enums.PaymentTypeTextEnum.Efectivo;
    var Cheque = Tickets.Models.Enums.PaymentTypeTextEnum.Cheques;
    var TargetaCredito = Tickets.Models.Enums.PaymentTypeTextEnum.TarjetaDeCredito;
    var NotaCredito = Tickets.Models.Enums.PaymentTypeTextEnum.NotaDeCredito;
    var DepTransf = Tickets.Models.Enums.PaymentTypeTextEnum.DepTransf;
}

<style>
    .col-lg-12 {
        width: 100%;
        float: left;
    }

    .col-lg-4 {
        width: 33.333%;
        float: left;
    }

    .col-lg-6 {
        width: 50%;
        float: left;
    }

    .text-center {
        text-align: center;
    }

    .text-right {
        text-align: right;
    }

    .text-left {
        text-align: left;
    }

    .no-padder {
        padding-left: 5px;
        padding-right: 5px;
    }
</style>

<div class="col-lg-12 col-md-12 col-sm-12">
    <div class="col-lg-12 col-md-12 col-sm-12 no-padder text-center">
        <div class="col-lg-12 col-md-12 col-sm-12 no-padder text-center">
            <img src="~/Images/logo.png" />
        </div>
        <div class="col-lg-12 no-padder text-center">
            <b>MINISTERIO DE HACIENDA</b>
        </div>
        <div class="col-lg-12 no-padder text-center">
            <b>ADMINISTRACION DE LA LOTERIA NACIONAL</b>
        </div>
        <div class="col-lg-12 col-md-12 col-sm-12 no-padder text-center">
            <b>HISTORICO DE PAGO</b>
        </div>
        <div class="col-lg-12 col-md-12 col-sm-12 no-padder text-right">
            <b>Fecha: </b> @DateTime.Now.ToShortDateString() <br />
            <b>Hora: </b> @DateTime.Now.ToShortTimeString() <br />
        </div>
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12 no-padder">
        <table class="table">
            <thead>
                <tr>
                    <th class="text-center">CLIENTE</th>
                    <th class="text-center">FACTURA</th>
                    <th class="text-center">FECHA</th>
                    <th class="text-center">REFERENCIA</th>
                    <th class="text-center">TIPO DE PAGO</th>
                    <th class="text-center">RECIBO</th>
                    <th class="text-center">CONCEPTO</th>
                    <th class="text-right">MONTO DE RECIBO</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var invoices = Model.GroupBy(i => i.RaffleId).Select(i => new
                    {
                        raffelName = i.FirstOrDefault().RaffleId + " - " + i.FirstOrDefault().Raffle.Name,
                        clients = i.GroupBy(c => c.ClientId).Select(c => new
                        {
                            clientName = c.FirstOrDefault().ClientId + " - " + c.FirstOrDefault().Client.Name,
                            invoices = c
                        })
                    });
                    decimal totalPayment = 0;
                }

                @foreach (var raffle in invoices.Where(i => i.clients.Count() > 0))
                {
                    decimal totalRaffle = 0;
                    <tr>
                        <th class="text-left" colspan="8">@raffle.raffelName</th>
                    </tr>

                    foreach (var client in raffle.clients.Where(i => i.invoices.Count() > 0))
                    {
                        decimal totalClient = 0;
                        <tr>
                            <th class="text-left" colspan="8" style="padding-left: 50px">@client.clientName</th>
                        </tr>

                        foreach (var invoice in client.invoices)
                        {
                            foreach (var receipt in invoice.ReceiptPayments)
                            {
                                if (receipt.ReceiptType != (int)Tickets.Models.Enums.PaymentTypeEnum.CreditNote)
                                {
                                    var value = (receipt.TotalCash + receipt.TotalCheck + receipt.TotalCredit);
                                    totalClient += value;
                                    <tr>
                                        <td class="text-center">@invoice.Client.Name @invoice.InvoiceTickets.Select(t => t.TicketAllocationNumber.TicketAllocation.Agente).FirstOrDefault()</td>
                                        <td class="text-center">@invoice.Id</td>
                                        <td class="text-center">@receipt.ReceiptDate.ToString()</td>
                                        <td class="text-center">@receipt.Recibo</td>
                                        <td class="text-center">
                                            @if (receipt.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.Cash)
                                            {
                                                @Efectivo;
                                            }
                                            else if (receipt.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.Checks)
                                            {
                                                @Cheque;
                                            }
                                            else if (receipt.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.CreditCard)
                                            {
                                                @TargetaCredito;
                                            }
                                            else if (receipt.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.TransDepDirect)
                                            {
                                                @DepTransf;
                                            }
                                        </td>
                                        <td class="text-center">@receipt.Id</td>
                                        <td class="text-center"></td>
                                        <td class="text-right" style="font-weight:bold;">@(value.ToString("c",  new System.Globalization.CultureInfo("es-DO")))</td>
                                    </tr>
                                }
                                else if (receipt.ReceiptType == (int)Tickets.Models.Enums.PaymentTypeEnum.CreditNote && receipt.NoteCreditReceiptPayments.Count > 0 && receipt.NoteCreditReceiptPayments.FirstOrDefault().TotalCash != 0)
                                {
                                    var value = receipt.NoteCreditReceiptPayments.Count > 0 ? receipt.NoteCreditReceiptPayments.FirstOrDefault().TotalCash : 0;
                                    totalClient += value;
                                    <tr>
                                        <td class="text-center">@invoice.Client.Name @invoice.InvoiceTickets.Select(t => t.TicketAllocationNumber.TicketAllocation.Agente).FirstOrDefault()</td>
                                        <td class="text-center">@invoice.Id</td>
                                        <td class="text-center">@receipt.ReceiptDate.ToString()</td>
                                        <td class="text-center">@receipt.Recibo</td>
                                        <td class="text-center">Nota de Credito No. @(receipt.NoteCreditReceiptPayments.Count == 0 ? 0 : receipt.NoteCreditReceiptPayments.FirstOrDefault().NoteCredit.Id)</td>
                                        <td class="text-center">@receipt.Id</td>
                                        <td class="text-center">@(receipt.NoteCreditReceiptPayments.Count == 0? "": receipt.NoteCreditReceiptPayments.FirstOrDefault().NoteCredit.Concepts)</td>
                                        <td class="text-right" style="font-weight:bold;">@value.ToString("c", new System.Globalization.CultureInfo("es-DO"))</td>
                                    </tr>
                                }
                            }
                        }
                        <tr class="total">
                            <td class="text-right" colspan="8" style="font-weight:bold;">Total Cliente: @totalClient.ToString("c", new System.Globalization.CultureInfo("es-DO"))</td>
                        </tr>
                        totalRaffle += totalClient;
                    }
                    <tr class="total">
                        <td class="text-right" colspan="8" style="font-weight:bold;">Total Sorteo: @totalRaffle.ToString("c", new System.Globalization.CultureInfo("es-DO"))</td>
                    </tr>
                    totalPayment += totalRaffle;
                }
            </tbody>
            <tfoot>
                <tr class="total">
                    <td class="text-right" colspan="8" style="font-weight:bold;">Total General: @totalPayment.ToString("c", new System.Globalization.CultureInfo("es-DO"))</td>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12 no-padder text-center">
        <b>George Ruiz Payano</b><br />
        <span>Encargado</span>
    </div>
</div>
