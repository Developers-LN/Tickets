@model List<Tickets.Models.Raffle>

@{
    Layout = "~/Views/Shared/_ReportLayout.cshtml";
    ViewBag.Title = "REPORTES DE CUENTAS POR COBRAR";

    var context = new Tickets.Models.TicketsEntities();
    var config = context.SystemConfigs.FirstOrDefault();
    string adminName = config != null ? config.CreditosCobros : "";
    string adminCargo = config != null ? config.CreditosCobrosCargo : "";
    System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("es-DO");
    int clientId = (int)ViewBag.clientId;
}

<style>
    .col-lg-12 {
        width: 100%;
        float: left;
    }

    .col-lg-4 {
        width: 33.333%;
        float: left;
    }

    .col-lg-6 {
        width: 50%;
        float: left;
    }

    .text-center {
        text-align: center;
    }

    .text-right {
        text-align: right;
    }

    .text-left {
        text-align: left;
    }

    .no-padder {
        padding-left: 5px;
        padding-right: 5px;
    }
</style>

<div class="col-lg-12">
    <div class="col-lg-12 no-padder text-center">
        <div class="col-lg-12 no-padder text-center" style="margin-top: 50px;">
            <img style="height:65px; width:auto; margin-bottom:5px;" src="~/Images/logo.png" />
        </div>
        <div class="col-lg-12 no-padder text-center">
            <b>MINISTERIO DE HACIENDA</b>
        </div>
        <div class="col-lg-12 no-padder text-center">
            <b>ADMINISTRACION DE LA LOTERIA NACIONAL</b>
        </div>
        <div class="col-lg-12 no-padder text-center">
            <b>REPORTE DE CUENTAS POR COBRAR</b>
        </div>
    </div>
    <div class="col-lg-12 no-padder">
        <div class="col-lg-6 no-padder text-left">
        </div>
        <div class="col-lg-6 no-padder text-right">
            <b>FECHA: </b> @DateTime.Now.ToShortDateString() <br />
            <b>HORA: </b> @DateTime.Now.ToShortTimeString() <br />
        </div>
    </div>
    <div>
        <div class="col-lg-12 no-padder">
            <table class="table">
                <thead>
                    <tr>
                        <th class="text-center">MAYORISTA</th>
                        <th class="text-right">VALOR FACTURADO</th>
                        <th class="text-right">DESCUENTO</th>
                        <th class="text-right">DEVOLUCIONES</th>
                        <th class="text-right">PAGOS POR PREMIOS</th>
                        <th class="text-right">AJUSTES</th>
                        <th class="text-right">PAGOS EN EFECTIVO</th>
                        <th class="text-right">CANTIDAD RESTANTE</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        decimal totalGeneralInvoice = 0.0m;
                        decimal totalGeneralDiscount = 0.0m;
                        decimal totalGeneralReturnedPayments = 0.0m;
                        decimal totalGeneralPayment = 0.0m;
                        decimal totalGeneralCredit = 0.0m;
                        decimal totalGeneralOther = 0.0m;
                        decimal totalGeneralRest = 0.0m;
                    }

                    @foreach (var raffle in Model)
                    {
                        decimal totalInvoice = 0.0m;
                        decimal totalDiscount = 0.0m;
                        decimal totalReturnedPayments = 0.0m;
                        //decimal totalGeneral = 0.0m;
                        decimal totalRest = 0.0m;
                        decimal totalPayment = 0.0m;
                        decimal totalCredit = 0.0m;
                        decimal totalOther = 0.0m;

                        var raffleName = raffle.Symbol + raffle.Separator + raffle.SequenceNumber + "  " + raffle.Name + " " + raffle.DateSolteo.ToShortDateString();
                        var invoices = raffle.Invoices.Where(i => (i.ClientId == clientId || clientId == 0) && i.PaymentStatu != (int)Tickets.Models.Enums.InvoicePaymentStatuEnum.Suspended).AsEnumerable()
                            .GroupBy(g => g.ClientId)
                            .Select(i => new
                            {
                                clientId = i.FirstOrDefault().ClientId,
                                clientName = i.FirstOrDefault().ClientId + " - " + i.FirstOrDefault().Client.Name,

                                invoiceValue = i.Select(iv => iv.InvoiceTickets.Select(it => it.Quantity * it.PricePerFraction).Aggregate((x, y) => x + y)).Aggregate((x, y) => x + y),

                                discountValue = i.Select(iv => (iv.Discount * iv.InvoiceTickets.Select(it => it.Quantity * it.PricePerFraction).Aggregate((x, y) => x + y)) / 100).Aggregate((x, y) => x + y),

                                paymentValue = i.Where(p => p.PaymentType != (int)Tickets.Models.Enums.PaymentTypeEnum.CreditNote)
                                                .Select(p => p.ReceiptPayments.Select(rp => rp.TotalCash + rp.TotalCheck + rp.TotalCredit).Sum()).Sum(),

                                returnedValue = i.Select(p => p.ReceiptPayments.Select(rp => rp.NoteCreditReceiptPayments.Where(nc => nc.NoteCredit.RaffleId.HasValue)
                                                 .Select(nc => nc.TotalCash).Sum()).Sum()).Sum(),

                                paymentIdentify = i.Select(p => p.ReceiptPayments.Select(rp => rp.NoteCreditReceiptPayments.Select(nc => nc.NoteCredit.IdentifyBaches.Any() ? nc.TotalCash : 0).Sum()).Sum()).Sum(),

                                otherPayment = i.Select(p => p.ReceiptPayments.Select(rp => rp.NoteCreditReceiptPayments.Select(nc => (nc.NoteCredit.IdentifyBaches.Any() == false && nc.NoteCredit.RaffleId.HasValue == false) ? nc.TotalCash : 0).Sum()).Sum()).Sum(),

                            }).ToList();

                        <tr>
                            <th colspan="7" class="text-left">@raffleName</th>
                        </tr>
                        foreach (var client in invoices)
                        {
                            var restant = client.invoiceValue - (client.discountValue + client.returnedValue + client.paymentValue + client.paymentIdentify + client.otherPayment);
                            <tr>
                                <td class="text-left">@client.clientName</td>
                                <td class="text-right">@((client.invoiceValue).ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                                <td class="text-right">@((client.discountValue).ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                                <td class="text-right">@((client.returnedValue).ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                                <td class="text-right">@((client.paymentIdentify).ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                                <td class="text-right">@((client.otherPayment).ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                                <td class="text-right">@((client.paymentValue).ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                                <td class="text-right">@((restant).ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                            </tr>
                            totalInvoice += client.invoiceValue;
                            totalDiscount += client.discountValue;
                            totalReturnedPayments += client.returnedValue;
                            totalPayment += client.paymentValue;
                            totalCredit += client.paymentIdentify;
                            totalOther += client.otherPayment;
                            totalRest += restant;
                        }

                        <tr class="sub-total" style="font-weight:bold">
                            <td class="text-right">TOTAL SORTEO...:</td>
                            <td class="text-right">@(totalInvoice.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                            <td class="text-right">@(totalDiscount.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                            <td class="text-right">@(totalReturnedPayments.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                            <td class="text-right">@(totalCredit.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                            <td class="text-right">@(totalOther.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                            <td class="text-right">@(totalPayment.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                            <td class="text-right">@(totalRest.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                        </tr>

                        totalGeneralInvoice += totalInvoice;
                        totalGeneralDiscount += totalDiscount;
                        totalGeneralReturnedPayments += totalReturnedPayments;
                        totalGeneralPayment += totalPayment;
                        totalGeneralCredit += totalCredit;
                        totalGeneralOther += totalOther;
                        totalGeneralRest += totalRest;
                    }
                </tbody>
                <tfoot>
                    <tr class="total" style="font-weight:bold">
                        <td class="text-right">TOTAL GENERAL...:</td>
                        <td class="text-right">@(totalGeneralInvoice.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                        <td class="text-right">@(totalGeneralDiscount.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                        <td class="text-right">@(totalGeneralReturnedPayments.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                        <td class="text-right">@(totalGeneralCredit.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                        <td class="text-right">@(totalGeneralOther.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                        <td class="text-right">@(totalGeneralPayment.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                        <td class="text-right">@(totalGeneralRest.ToString("c", new System.Globalization.CultureInfo("es-DO")))</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12 no-padder text-center">
        <b>@adminName</b><br />
        <span>@adminCargo</span>
    </div>
</div>
